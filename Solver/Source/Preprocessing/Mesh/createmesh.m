function [ncoord,eco] = createmesh(ndiv,air,elemType)
%
%Purpose
%Generate Q4 or T3 mesh for given domain dimensions and identify boundary
%nodes. T3 is generated by splitting one Q4 into two elements diagonally
%Variables
%L, D - dimensions of the domain
%nxdiv, nydiv - number of elements in X- and Y- direction
%ncoord - nodal coordinates
%eco - element connectivity matrix
%bnodes - cell containing boundary nodes
%--------------------------------------------------------------------------
global L D

%disp([num2str(toc),'    Mesh Generation'])

%pt1 = [0 -L/2]; pt2 = [D -L/2]; pt3 = [D L/2]; pt4 = [0 L/2];

% (0,0) is at central
pt1 = [-D/2 -L/2]; pt2 = [D/2 -L/2]; pt3 = [D/2 L/2]; pt4 = [-D/2 L/2]; 
% (0,0) is at left central
%pt1 = [0 -L/2]; pt2 = [D -L/2]; pt3 = [D L/2]; pt4 = [0 L/2]; 

switch elemType
    case 'PARTICLE' % generate the mesh for particles
        nxdiv = ndiv(1)+1;
        nydiv = ndiv(2)+1;
    case 'Q4'           % here we generate the mesh of Q4 elements
        nxdiv = ndiv(1)+1;
        nydiv = ndiv(2)+1;
    case 'Q9'           % here we generate a mesh of Q9 elements
        nxdiv = 2*ndiv(1)+1;
        nydiv = 2*ndiv(2)+1;
    case 'T3' % and last but not least T3 elements
        nxdiv = ndiv(1)+1;
        nydiv = ndiv(2)+1;
    case 'T6' % and last but not least T6 elements
        nxdiv = 2*ndiv(1)+1;
        nydiv = 2*ndiv(2)+1;
    otherwise
        error('For now, only PARTICLE, Q4, Q9 T3 and T6 are supported by the mesh generator');
end

[ncoord,eco] = meshRectangularRegion(pt1,pt2,pt3,pt4,nxdiv,nydiv,elemType) ;

%generate distorted mesh. this is done by giving small perturbation to each
%node in the domain. the element connectivity remains the same
if( air > 0 )
    dx = L/nxdiv; dy = L/nydiv ;
    gcoord = ncoord ;
    nn = 0 ;
    for ip = 1:nxdiv
        for iq = 1:nydiv
            nn = nn+1 ;
            r = rand(1) ;
            r = air*(2*r-1) ;
            if( ip == 1 | ip == nxdiv | iq == 1 | iq == nydiv)
                r = 0 ;
            end
            gcoord(nn,1) = gcoord(nn,1)+ dx*r ;
            gcoord(nn,2) = gcoord(nn,2)+ dy*r ;
        end
    end
    clear nn ;
    ncoord = gcoord ;
end